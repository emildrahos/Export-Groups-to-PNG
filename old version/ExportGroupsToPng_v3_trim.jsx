// Skript pro exportovani Skupin oznacenych ".png" na konci do samostatnych PNG souboru// "Export assetu"// Skript exportuje pouze skupiny. Nikoliv samostatne vrstvy!// TRIM Enabled// v_3// ED// 14. 3. 2016// ---------// Based on:// (C) Mirko Hänßgen, 08.01.2014// Exporting Nested Layersets// ---------// exportCurrentLayer - funkce exportuje vsechny vrstvy do samostatnych png souboru// kazde vrstve nastavi visibility na true a po exportu je vrati na falsefunction findTrim(fileRoot, trimArray, groupName){    for (var i = 0; i < fileRoot.length; i++){        trimArray.push(fileRoot[i])                 if (fileRoot[i].layerSets.length > 0)        {            findTrim(fileRoot[i].layerSets, trimArray)        }    }}function exportCurrentLayer(arrlayer, filePathToOriginal){       var opts = new ExportOptionsSaveForWeb()    opts.format = SaveDocumentType.PNG    opts.PNG8 = false    opts.quality = 100        var trimLayer = ""        for (var lvi = 0; lvi < docRef.artLayers.length; lvi++)    {        //vypnuti vsech ostatnich artLayers v rootu        workingFile.artLayers[lvi].visible = false    }    for (var lvi = 0; lvi < arrlayer.length; lvi++)    {        // vypnuti visibility vsech vrstev ktere jsou v poli arrlayer        arrlayer[lvi].visible = false    }    // HERE COMES THE DIRTY PART - Exporting    //--------------------------    for (var lvi = 0; lvi < arrlayer.length; lvi++)    {           //visibility na exportovane group TRUE        arrlayer[lvi].visible = true                //test jestli group obsahuje TRIM vrstvu        try {            trimLayer = arrlayer[lvi].artLayers.getByName("TRIM") //do trimLayer se vlozi ref na vrtsvu TRIM            if (trimLayer !== "") {                trimLayer.visible = true //pokud trim layer existuje, nastavi se vis na true                var trimFile = workingFile.duplicate()                findTrim(trimFile.layerSets, trimArray, arrlayer[lvi].name)                //trim()                //funkce ktera prohleda novy dokument a najde vrstvu a zhasne ji                $.writeln(app.activeDocument)                $.writeln(trimFile.activeLayer)            }            trimLayer = ""        } catch(e){}                        trimFile.activeLayer = docRef.layers[0] // HEHEHEHEHRE      //BACK TO THE ORIGINAL SCRIPT      //---------------------------        var fileexport = new File (filePathToOriginal + "/" + (arrlayer[lvi].name))        activeDocument.exportDocument(fileexport, ExportType.SAVEFORWEB, opts)        //zavreni duplikatu pro trimovani a obnoveni neviditelnosti slozky        trimFile.close(SaveOptions.DONOTSAVECHANGES)        arrlayer[lvi].visible = false    }}// getNestedLayers - funkce vytvori sezname vrstev ktere se maji exportovatfunction getNestedLayers(lsroot, arrlayer){    for (var lvi = lsroot.length-1; lvi > -1; lvi--)    {        layerName = lsroot[lvi].name        isLayerForExport = layerName.substr((layerName.length - 4), layerName.length)                if (isLayerForExport === ".png"){            arrlayer.push(lsroot[lvi])            }        //pokud group NENI .png a zaroven obsahuje artLayers tak se artLayers vypnou        if ((isLayerForExport !== ".png") && (lsroot[lvi].artLayers.length > 0)){                for (i = 0; i < lsroot[lvi].artLayers.length; i += 1){                    lsroot[lvi].artLayers[i].visible = false                    }            }        //pokud group NENI .png a zaroven obsahuje dalsi groups then >>>, POKUD ALE JE PNG TAK SE NA JEJI PODSLOZKY NESAHA        if ((lsroot[lvi].layerSets.length > 0) && (isLayerForExport !== ".png")){            lsroot[lvi].visible = true            getNestedLayers(lsroot[lvi].layerSets, arrlayer)            }     }//end of for}//end of getNestedLayers// --------------- MAIN ---------------- //#target photoshopapp.bringToFront()//turn dialogs OFFdisplayDialogs = DialogModes.NOvar layerName = ""var isLayerForExport = ""var docRef = app.activeDocumentvar filePathToOriginal = docRef.path //reference na cestu souboruvar workingFile = docRef.duplicate() //vytvoreni pracovniho duplikatu//deklarace noveho pole do ktereho se nactou ref na layerSety s .png na konciarrlayer = new Array()trimArray = new Array()//vytvorit seznam vrstev pro exportgetNestedLayers(workingFile.layerSets, arrlayer)//exportovat vybrane vrstvy do PNGexportCurrentLayer(arrlayer, filePathToOriginal)//zavrit duplikovany pracovni soubor bez ulozeni zmenworkingFile.close(SaveOptions.DONOTSAVECHANGES)//turn dialogs back ONdisplayDialogs = DialogModes.ALLalert("Layers exported: " + arrlayer.length)//////